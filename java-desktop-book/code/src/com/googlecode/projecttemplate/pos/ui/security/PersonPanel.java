/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UserPanel.java
 *
 * Created on May 10, 2009, 5:52:24 PM
 */

package com.googlecode.projecttemplate.pos.ui.security;

import com.googlecode.projecttemplate.pos.Main;
import com.googlecode.projecttemplate.pos.model.MaritalStatus;
import com.googlecode.projecttemplate.pos.model.Person;
import com.googlecode.projecttemplate.pos.util.ComponentUtils;
import com.googlecode.projecttemplate.pos.util.TextComponentUtils;
import com.twmacinta.util.MD5;
import java.awt.Image;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.AbstractTableModel;
import org.apache.log4j.Logger;
import org.openide.util.Exceptions;

/**
 *
 * @author ifnu
 */
public class PersonPanel extends javax.swing.JInternalFrame {

    private List<Person> persons;
    private Person person;
    private JFileChooser chooser;
    private final int maxPictureSize = 128;
    private ImageIcon image;
    private static final Logger log = Logger.getLogger(PersonPanel.class);

    /** Creates new form UserPanel */
public PersonPanel() {
    initComponents();

    TextComponentUtils.setMaximumLength(100, txtName);

    tblPerson.setAutoCreateColumnsFromModel(false);
    tblPerson.getSelectionModel().addListSelectionListener(new PersonTableSelectionListener());
    refreshTable();

    enableForm(false);

    cmbMaritalStatus.setModel(new DefaultComboBoxModel(MaritalStatus.values()));

    //pengaturan tombol ketika person panel dibuka
    btnDelete.setEnabled(false);
    btnAdd.setEnabled(true);
    btnCancel.setEnabled(false);
    btnEdit.setEnabled(false);
    btnSave.setEnabled(false);
}

private void refreshTable(){
    persons = Main.getSecurityService().getPersons();
    tblPerson.setModel(new PersonTableModel(persons));
}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPerson = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jdcBirthDate = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtFoto = new javax.swing.JTextField();
        btnBrowse = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        cmbMaritalStatus = new javax.swing.JComboBox();
        lblFoto = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtRemark = new javax.swing.JTextArea();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Pengguna");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setText("Cari");

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        tblPerson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama", "Tanggal Lahir"
            }
        ));
        tblPerson.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblPerson);

        jLabel3.setText("Nama");

        jLabel4.setText("Password");

        txtName.setEnabled(false);

        jLabel5.setText("Id");

        txtId.setEnabled(false);

        txtPassword.setEnabled(false);

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/mnuNew.png"))); // NOI18N
        btnAdd.setText("Tambah");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/mnuManuaEdit.png"))); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/mnudelete.png"))); // NOI18N
        btnDelete.setText("Hapus");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/mnuSave.png"))); // NOI18N
        btnSave.setText("Simpan");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/mnuCancel.png"))); // NOI18N
        btnCancel.setText("Batal");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/mnudoor.png"))); // NOI18N
        btnExit.setText("Keluar");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLabel2.setText("Tanggal Lahir");

        jLabel6.setText("Foto");

        btnBrowse.setText("...");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        jLabel7.setText("Status Perkawinan");

        lblFoto.setBorder(javax.swing.BorderFactory.createTitledBorder("Foto"));

        jLabel8.setText("Catatan");

        txtRemark.setColumns(20);
        txtRemark.setRows(5);
        jScrollPane2.setViewportView(txtRemark);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExit))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSearch)))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jdcBirthDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbMaritalStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnBrowse))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblFoto, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnCancel, btnDelete, btnEdit, btnExit, btnSave});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete)
                    .addComponent(btnSave)
                    .addComponent(btnExit)
                    .addComponent(btnCancel)
                    .addComponent(btnEdit))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jdcBirthDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtFoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnBrowse))))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(cmbMaritalStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblFoto, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAdd, btnCancel, btnDelete, btnEdit, btnExit, btnSave});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if(person!=null){
            try{
                Main.getSecurityService().delete(person);
                clearForm();
                person = null;
                refreshTable();
                enableForm(false);
                //pengaturan tombol
                btnDelete.setEnabled(false);
                btnAdd.setEnabled(true);
                btnCancel.setEnabled(false);
                btnEdit.setEnabled(false);
                btnSave.setEnabled(false);
            } catch(Exception ex){
                log.error(ex);
                JOptionPane.showMessageDialog(this, "Data masih digunakan tidak bisa dihapus!"
                        ,"Error",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        clearForm();
        enableForm(true);
        //pengaturan tombol
        btnDelete.setEnabled(false);
        btnAdd.setEnabled(false);
        btnCancel.setEnabled(true);
        btnEdit.setEnabled(false);
        btnSave.setEnabled(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if(validateForm()){
            if(person == null){
                person = new Person();
            }
            loadFormToModel();
            try{
                Main.getSecurityService().save(person);
                clearForm();
                refreshTable();
                enableForm(false);
                //pengaturan tombol
                btnDelete.setEnabled(false);
                btnAdd.setEnabled(true);
                btnCancel.setEnabled(false);
                btnEdit.setEnabled(false);
                btnSave.setEnabled(false);
            } catch(Exception ex){
                log.error(ex);
                JOptionPane.showMessageDialog(this, "Data gagal disimpan!"
                        ,"Error",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        clearForm();
        enableForm(false);
        //pengaturan tombol
        btnDelete.setEnabled(false);
        btnAdd.setEnabled(true);
        btnCancel.setEnabled(false);
        btnEdit.setEnabled(false);
        btnSave.setEnabled(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        Main.getFrame().personPanel = null;
        dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        for(int i=0;i<tblPerson.getRowCount();i++){
            if(tblPerson.getValueAt(i, 0).toString().startsWith(txtSearch.getText())){
                //select baris yang ditemukan
                tblPerson.getSelectionModel().setSelectionInterval(i, i);
                //scroll ke baris tersebut kalau ada di bawah atau bagian atas 
                ComponentUtils.scrollToRect(tblPerson, i);
                break;
            }
        }        
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        if(chooser == null){
            chooser = new JFileChooser(System.getProperty("user.home"));
            chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            chooser.setFileFilter(new FileNameExtensionFilter("jpg|png|gif", "jpg","png","gif"));
        }
        int ret = chooser.showOpenDialog(this);
        if(ret == JFileChooser.APPROVE_OPTION){
            File f = chooser.getSelectedFile();
            try {
                Image img = ImageIO.read(new FileInputStream(f));
                //cek ukuran foto, kalau terlalu besar resize ke maxPictureSize
                if(img.getHeight(this)>maxPictureSize || img.getWidth(this)>maxPictureSize){
                    if(img.getHeight(this) > img.getWidth(this)){
                        float scale = img.getHeight(this)/maxPictureSize;
                        int widthSize = (int) (img.getWidth(this) / scale);
                        img = img.getScaledInstance(maxPictureSize, widthSize, Image.SCALE_SMOOTH);
                    } else {
                        float scale = img.getWidth(this)/maxPictureSize;
                        int heightSize = (int) (img.getHeight(this) / scale);
                        img = img.getScaledInstance(maxPictureSize, heightSize, Image.SCALE_SMOOTH);
                    }
                }
                image = new ImageIcon(img);
                lblFoto.setIcon(image);
                txtFoto.setText(f.getAbsolutePath());
            } catch (IOException ex) {
                log.error("error membuka file foto",ex);
            }

        }
    }//GEN-LAST:event_btnBrowseActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if(person!=null){
            enableForm(true);
            btnDelete.setEnabled(false);
            btnAdd.setEnabled(false);
            btnCancel.setEnabled(true);
            btnEdit.setEnabled(false);
            btnSave.setEnabled(true);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        Main.getFrame().personPanel = null;
    }//GEN-LAST:event_formInternalFrameClosed

private void loadModelToForm(){
    txtId.setText(String.valueOf(person.getId()));
    txtName.setText(person.getName());
    txtPassword.setText(person.getPassword());
    jdcBirthDate.setDate(person.getBirthDate());
    cmbMaritalStatus.setSelectedItem(person.getStatus());
    txtRemark.setText(person.getRemark());
    if(person.getPicture()!=null){
        try {
            ObjectInputStream objectInputStream =
                    new ObjectInputStream(new ByteArrayInputStream(person.getPicture()));
            image = (ImageIcon) objectInputStream.readObject();
            lblFoto.setIcon(image);
        } catch (ClassNotFoundException ex) {
            log.error("Image gagal dibaca", ex);
        } catch (IOException ex) {
            log.error("Image gagal dibaca", ex);
        }
    } else {
        lblFoto.setIcon(null);
    }
}

private void loadFormToModel(){
    person.setName(txtName.getText());
    if(person.getPassword()==null
            || !person.getPassword().equals(
                new String(txtPassword.getPassword()))){
        //encrypt kata sandi dengan MD5
        String kataSandi = new MD5(new String(txtPassword.getPassword())).asHex();
        person.setPassword(kataSandi);
    }
    person.setRemark(txtRemark.getText());
    person.setBirthDate(jdcBirthDate.getDate());
    person.setStatus((MaritalStatus) cmbMaritalStatus.getSelectedItem());
    if(!txtFoto.getText().equals("")){
        ObjectOutputStream dataOutputStream = null;
        try {
            ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
            dataOutputStream = new ObjectOutputStream(outputStream);
            dataOutputStream.writeObject(image);
            dataOutputStream.flush();
            person.setPicture(outputStream.toByteArray());
        } catch (IOException ex) {
            log.error("gagal mengubah Image ke bytearray",ex);
        } finally {
            try {
                dataOutputStream.close();
            } catch (IOException ex) {
                Exceptions.printStackTrace(ex);
            }
        }
    }
}

private boolean validateForm(){
    if(txtName.getText().length()>0 &&
            txtPassword.getPassword()!=null &&
            txtPassword.getPassword().length>0){
        return true;
    } else {
        JOptionPane.showMessageDialog(Main.getFrame(),
                "Isi semua field!","Error",JOptionPane.ERROR_MESSAGE);
        return false;
    }
}

private void clearForm(){
    txtId.setText("");
    txtName.setText("");
    txtPassword.setText("");
    txtRemark.setText("");
    txtFoto.setText("");
    tblPerson.getSelectionModel().clearSelection();
    jdcBirthDate.setDate(null);
    person = null;
    lblFoto.setIcon(null);
}

private void enableForm(boolean status){
    txtName.setEnabled(status);
    txtPassword.setEnabled(status);
    jdcBirthDate.setEnabled(status);
    btnBrowse.setEnabled(status);
    txtFoto.setEnabled(false);
    txtRemark.setEnabled(status);
    cmbMaritalStatus.setEnabled(status);
}

private class PersonTableModel extends AbstractTableModel{
    private List<Person> listPersons;
    public PersonTableModel(List<Person> listPersons) {
        this.listPersons = listPersons;
    }
    public int getRowCount() {
        return listPersons.size();
    }
    public int getColumnCount() {
        return 2;
    }
    public Object getValueAt(int rowIndex, int columnIndex) {
        Person p = persons.get(rowIndex);
        switch(columnIndex){
            case 0 : return p.getName();
            case 1 : return p.getBirthDate();
            default: return "";
        }
    }
}

private class PersonTableSelectionListener implements ListSelectionListener{
    public void valueChanged(ListSelectionEvent e) {
        if(tblPerson.getSelectedRow()>=0){
            person = persons.get(tblPerson.getSelectedRow());
            person = Main.getSecurityService().getPerson(person.getId());
            loadModelToForm();
            btnDelete.setEnabled(true);
            btnAdd.setEnabled(false);
            btnCancel.setEnabled(true);
            btnEdit.setEnabled(true);
            btnSave.setEnabled(false);
        }
    }
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cmbMaritalStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser jdcBirthDate;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JTable tblPerson;
    private javax.swing.JTextField txtFoto;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextArea txtRemark;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

}
