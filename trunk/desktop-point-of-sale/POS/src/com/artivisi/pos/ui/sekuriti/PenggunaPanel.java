/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UserPanel.java
 *
 * Created on May 10, 2009, 5:52:24 PM
 */

package com.artivisi.pos.ui.sekuriti;

import com.artivisi.pos.model.sekuriti.Pengguna;
import com.artivisi.pos.ui.frame.FrameUtama;
import com.artivisi.pos.util.TextComponentUtils;
import com.twmacinta.util.MD5;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author ifnu
 */
public class PenggunaPanel extends javax.swing.JInternalFrame {

    private List<Pengguna> penggunas;
    private Pengguna pengguna;

    /** Creates new form UserPanel */
    public PenggunaPanel() {
        initComponents();

        initListener();

        TextComponentUtils.setAutoUpperCaseText(30, txtId);
        TextComponentUtils.setAutoUpperCaseText(100, txtNama);

        tblPengguna.setAutoCreateColumnsFromModel(false);
        isiTablePengguna();
    }

    private void isiTablePengguna(){
        penggunas = FrameUtama.getSekuritiService().semuaPengguna();
        tblPengguna.setModel(new PenggunaTableModel(penggunas));
    }

    private void initListener(){
        // Listener untuk table ketika table di Klik
        tblPengguna.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent evt) {
                if(tblPengguna.getSelectedRow()>=0){
                    pengguna = penggunas.get(tblPengguna.getSelectedRow());
                    loadModelToForm();
                    enableForm(false);
                    masterToolbarPanel1.kondisiTabelTerpilih();
                }
            }
        });

        //ketika tombol delete di Klik
        masterToolbarPanel1.getBtnHapus().addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent evt) {
                try{
                    if(pengguna!=null){
                        FrameUtama.getSekuritiService().hapus(pengguna);
                    }
                } catch(Throwable t){
                    JOptionPane.showMessageDialog(FrameUtama.getInstance(), "Data ini masih digunakan!",
                            "Error",JOptionPane.ERROR_MESSAGE);
                }
            }
        });


        //button edit di Klik
        masterToolbarPanel1.getBtnEdit().addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent evt) {
                enableForm(true);
                masterToolbarPanel1.kondisiTambah();
            }
        });

        // Ketika Button Tambah di Klick
        masterToolbarPanel1.getBtnTambah().addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent evt) {
                enableForm(true);
                masterToolbarPanel1.kondisiTambah();
            }
        });

        // Ketika Tombol Batal di Klik
        masterToolbarPanel1.getBtnBatal().addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent evt) {
                masterToolbarPanel1.kondisiAwal();
                clearForm();
                enableForm(false);
            }
        });

        // Ketika Tombol Keluar di Klik
        masterToolbarPanel1.getBtnKeluar().addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent evt) {
                FrameUtama.getInstance().removeInternalFrame(PenggunaPanel.this);
            }
        });

        // Ketika tombol Simpan di Klik
        masterToolbarPanel1.getBtnSimpan().addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent evt) {
                if(validateForm()){
                    if(pengguna == null) pengguna = new Pengguna();
                    loadFormToModel();
                    FrameUtama.getSekuritiService().simpan(pengguna);
                    clearForm();
                    enableForm(false);
                    masterToolbarPanel1.kondisiAwal();
                    isiTablePengguna();
                }
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        masterToolbarPanel1 = new com.artivisi.pos.ui.toolbar.MasterToolbarPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPengguna = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNama = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtKataSandi = new javax.swing.JPasswordField();

        setTitle("Pengguna");

        jLabel1.setText("Search Character");

        tblPengguna.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama", "Nama Lengkap"
            }
        ));
        tblPengguna.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblPengguna);

        jLabel3.setText("Nama Lengkap");

        jLabel4.setText("Password");

        txtNama.setEnabled(false);

        jLabel5.setText("Nama");

        txtId.setEnabled(false);

        txtKataSandi.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(masterToolbarPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtKataSandi, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(masterToolbarPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txtKataSandi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadModelToForm(){
        txtId.setText(pengguna.getId());
        txtNama.setText(pengguna.getNamaLengkap());
        txtKataSandi.setText(pengguna.getKataSandi());
    }

    private void loadFormToModel(){
        pengguna.setId(txtId.getText());
        pengguna.setNamaLengkap(txtNama.getText());
        String kataSandi = new MD5(new String(txtKataSandi.getPassword())).asHex();
        if(pengguna!=null && !kataSandi.equals(pengguna.getKataSandi())){
            pengguna.setKataSandi(kataSandi);
        }
    }

    private boolean validateForm(){
        if(txtId.getText().length()>0 &&
                txtNama.getText().length()>0 &&
                txtKataSandi.getPassword()!=null &&
                txtKataSandi.getPassword().length>0){
            return true;
        } else {
            JOptionPane.showMessageDialog(FrameUtama.getInstance(), "Isi semua field!","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    private void clearForm(){
        txtId.setText("");
        txtNama.setText("");
        txtKataSandi.setText("");
        tblPengguna.getSelectionModel().clearSelection();
        pengguna = null;
    }

    private void enableForm(boolean status){
        txtId.setEnabled(status);
        txtNama.setEnabled(status);
        txtKataSandi.setEnabled(status);
    }

    private class PenggunaTableModel extends AbstractTableModel{

        private List<Pengguna> listPenggunas;

        public PenggunaTableModel(List<Pengguna> listPenggunas) {
            this.listPenggunas = listPenggunas;
        }

        public int getRowCount() {
            return listPenggunas.size();
        }

        public int getColumnCount() {
            return 2;
        }

        public Object getValueAt(int rowIndex, int columnIndex) {
            Pengguna p = penggunas.get(rowIndex);
            switch(columnIndex){
                case 0 : return p.getId();
                case 1 : return p.getNamaLengkap();
                default: return "";
            }
        }
        
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private com.artivisi.pos.ui.toolbar.MasterToolbarPanel masterToolbarPanel1;
    private javax.swing.JTable tblPengguna;
    private javax.swing.JTextField txtId;
    private javax.swing.JPasswordField txtKataSandi;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

}
